import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export default function Sidebar({ tool, setTool, color, setColor, size, setSize, mirror, setMirror, grid, setGrid, layer, setLayer, onUndo, onRedo, canUndo, canRedo }) {
    const Btn = ({ name, active, onClick }) => (_jsx("button", { className: `btn-ghost ${active ? 'ring-2 ring-neon-400' : ''}`, onClick: onClick, children: name }));
    const swatches = ['#000000', '#FFFFFF', '#C58C5A', '#8A4DFF', '#6F2BFF', '#3AA3A3', '#7AA1FF', '#FF5555', '#FFD166', '#06D6A0', '#118AB2'];
    return (_jsxs("div", { className: "toolbar", children: [_jsxs("div", { children: [_jsx("div", { className: "font-semibold mb-2", children: "Werkzeuge" }), _jsxs("div", { className: "flex flex-wrap gap-2", children: [_jsx(Btn, { name: "Brush (B)", active: tool === 'brush', onClick: () => setTool('brush') }), _jsx(Btn, { name: "Eraser (E)", active: tool === 'eraser', onClick: () => setTool('eraser') }), _jsx(Btn, { name: "Fill (F)", active: tool === 'fill', onClick: () => setTool('fill') }), _jsx(Btn, { name: "Picker (P)", active: tool === 'picker', onClick: () => setTool('picker') })] })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("label", { className: "label", children: "Farbe" }), _jsx("input", { className: "input", type: "color", value: color, onChange: e => setColor(e.target.value) }), _jsx("div", { className: "flex gap-1", children: swatches.map(s => (_jsx("button", { className: "w-6 h-6 rounded-xl2 border border-cyber-edge", style: { background: s }, onClick: () => setColor(s) }, s))) })] }), _jsxs("div", { children: [_jsxs("label", { className: "label", children: ["Pinselgr\u00F6\u00DFe: ", size, "px"] }), _jsx("input", { className: "range", type: "range", min: 1, max: 12, value: size, onChange: e => setSize(parseInt(e.target.value)) })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { id: "mirror", type: "checkbox", checked: mirror, onChange: e => setMirror(e.target.checked) }), _jsx("label", { htmlFor: "mirror", className: "label", children: "Spiegeln L\u2194R (M)" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { id: "grid", type: "checkbox", checked: grid, onChange: e => setGrid(e.target.checked) }), _jsx("label", { htmlFor: "grid", className: "label", children: "Grid (G)" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("span", { className: "label", children: "Layer" }), _jsx("button", { className: `btn-ghost ${layer === 'base' ? 'ring-2 ring-neon-400' : ''}`, onClick: () => setLayer('base'), children: "Base" }), _jsx("button", { className: `btn-ghost ${layer === 'overlay' ? 'ring-2 ring-neon-400' : ''}`, onClick: () => setLayer('overlay'), children: "Overlay" })] }), _jsxs("div", { className: "flex gap-2", children: [_jsx("button", { className: "btn", onClick: onUndo, disabled: !canUndo, children: "Undo (Ctrl+Z)" }), _jsx("button", { className: "btn", onClick: onRedo, disabled: !canRedo, children: "Redo (Ctrl+Y)" })] }), _jsxs("div", { className: "text-neon-100 text-xs", children: ["Hotkeys: ", _jsx("span", { className: "hotkey", children: "B" }), " ", _jsx("span", { className: "hotkey", children: "E" }), " ", _jsx("span", { className: "hotkey", children: "F" }), " ", _jsx("span", { className: "hotkey", children: "P" }), " \u00B7", _jsx("span", { className: "hotkey", children: "G" }), " Grid \u00B7 ", _jsx("span", { className: "hotkey", children: "M" }), " Mirror \u00B7 ", _jsx("span", { className: "hotkey", children: "+" }), "/", _jsx("span", { className: "hotkey", children: "-" }), " Zoom"] })] }));
}
